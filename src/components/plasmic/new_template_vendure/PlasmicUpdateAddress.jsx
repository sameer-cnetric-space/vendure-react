// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hGXuZyzubCg89KNadA76kG
// Component: OCDpitsZu9jMgB
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { GraphqlFetcher } from "@plasmicpkgs/plasmic-query"; // plasmic-import: 0DrxdjD45dkx/codeComponent
import Button from "../../Button"; // plasmic-import: AHmQZeuRNXKDJT/component
import { FormWrapper } from "@plasmicpkgs/antd5/skinny/registerForm"; // plasmic-import: TgJFzUZpvQ/codeComponent
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton"; // plasmic-import: bx9Xzvf5_eu/codeComponent
import { FormItemWrapper } from "@plasmicpkgs/antd5/skinny/registerForm"; // plasmic-import: EYHwZh9ILg/codeComponent
import { AntdInput } from "@plasmicpkgs/antd5/skinny/registerInput"; // plasmic-import: Vf5hntD2SZ5/codeComponent
import { inputHelpers as AntdInput_Helpers } from "@plasmicpkgs/antd5/skinny/registerInput"; // plasmic-import: Vf5hntD2SZ5/codeComponentHelper
import Select from "../../Select"; // plasmic-import: fFEopN_-lUf6Cj/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_new_template_vendure.module.css"; // plasmic-import: hGXuZyzubCg89KNadA76kG/projectcss
import sty from "./PlasmicUpdateAddress.module.css"; // plasmic-import: OCDpitsZu9jMgB/css
import FrameIcon from "./icons/PlasmicIcon__Frame"; // plasmic-import: HKcCIpauuB9CGm/icon
import Frame2Icon from "./icons/PlasmicIcon__Frame2"; // plasmic-import: m4v5BuZET3af0x/icon
import Frame3Icon from "./icons/PlasmicIcon__Frame3"; // plasmic-import: gfo1RJd54zPXVx/icon
import Frame4Icon from "./icons/PlasmicIcon__Frame4"; // plasmic-import: OiKd2RcJwoXpl_/icon
import Frame5Icon from "./icons/PlasmicIcon__Frame5"; // plasmic-import: P2rc9Q1TWVaB44/icon
import Frame6Icon from "./icons/PlasmicIcon__Frame6"; // plasmic-import: Dd9xfOskzbTivN/icon
import Frame7Icon from "./icons/PlasmicIcon__Frame7"; // plasmic-import: p2GNwuTvHzmKNe/icon
import Frame8Icon from "./icons/PlasmicIcon__Frame8"; // plasmic-import: FNI9-QXSpX_HrN/icon
import Frame9Icon from "./icons/PlasmicIcon__Frame9"; // plasmic-import: zkSQt1vk-MZjmD/icon
import Frame10Icon from "./icons/PlasmicIcon__Frame10"; // plasmic-import: dkJYLT93Q85JOK/icon

export const PlasmicUpdateAddress__VariantProps = new Array();

export const PlasmicUpdateAddress__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicUpdateAddress__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "form.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input4.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input5.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input6.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input8.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input9.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "select.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],

    [$props, $ctx]
  );
  const $state = p.useDollarState(stateSpecs, { $props, $ctx, $queries });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <GraphqlFetcher
            data-plasmic-name={"graphQlFetcher"}
            data-plasmic-override={overrides.graphQlFetcher}
            className={classNames("__wab_instance", sty.graphQlFetcher)}
            dataName={"fetchedData"}
            errorDisplay={
              <ph.DataCtxReader>
                {$ctx => "Error fetching data"}
              </ph.DataCtxReader>
            }
            headers={{
              "Content-Type": "application/json",
              Accept: "application/json"
            }}
            loadingDisplay={
              <ph.DataCtxReader>{$ctx => "Loading..."}</ph.DataCtxReader>
            }
            method={"POST"}
            noLayout={false}
            query={{
              query:
                "query MyQuery($name: String) {\n  characters(filter: {name: $name}) {\n    results {\n      name\n      species\n      image\n    }\n  }\n}\n",
              variables: { name: "Rick Sanchez" }
            }}
            url={"https://rickandmortyapi.com/graphql"}
            varOverrides={{}}
          >
            <ph.DataCtxReader>
              {$ctx =>
                true ? (
                  <div
                    data-plasmic-name={"freeBox"}
                    data-plasmic-override={overrides.freeBox}
                    className={classNames(projectcss.all, sty.freeBox)}
                  >
                    <div
                      data-plasmic-name={"frame"}
                      data-plasmic-override={overrides.frame}
                      className={classNames(projectcss.all, sty.frame)}
                    >
                      <div
                        data-plasmic-name={"frame15"}
                        data-plasmic-override={overrides.frame15}
                        className={classNames(projectcss.all, sty.frame15)}
                      >
                        <div
                          data-plasmic-name={"frame16"}
                          data-plasmic-override={overrides.frame16}
                          className={classNames(projectcss.all, sty.frame16)}
                        >
                          <div
                            data-plasmic-name={"frame17"}
                            data-plasmic-override={overrides.frame17}
                            className={classNames(projectcss.all, sty.frame17)}
                          >
                            <div
                              data-plasmic-name={"newFeatured"}
                              data-plasmic-override={overrides.newFeatured}
                              className={classNames(
                                projectcss.all,
                                sty.newFeatured
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ez3WB
                                )}
                              >
                                {"New & Featured"}
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"men"}
                              data-plasmic-override={overrides.men}
                              className={classNames(projectcss.all, sty.men)}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wcgS9
                                )}
                              >
                                {"Men"}
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"women"}
                              data-plasmic-override={overrides.women}
                              className={classNames(projectcss.all, sty.women)}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__oxNMd
                                )}
                              >
                                {"Women"}
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"kids"}
                              data-plasmic-override={overrides.kids}
                              className={classNames(projectcss.all, sty.kids)}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__a15Gr
                                )}
                              >
                                {"Kids"}
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"sale"}
                              data-plasmic-override={overrides.sale}
                              className={classNames(projectcss.all, sty.sale)}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__yyVZw
                                )}
                              >
                                {"Sale"}
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"snkrs"}
                              data-plasmic-override={overrides.snkrs}
                              className={classNames(projectcss.all, sty.snkrs)}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uCuWe
                                )}
                              >
                                {"SNKRS"}
                              </div>
                            </div>
                          </div>
                          <div
                            data-plasmic-name={"frame18"}
                            data-plasmic-override={overrides.frame18}
                            className={classNames(projectcss.all, sty.frame18)}
                          >
                            <div
                              data-plasmic-name={"frame19"}
                              data-plasmic-override={overrides.frame19}
                              className={classNames(
                                projectcss.all,
                                sty.frame19
                              )}
                            >
                              <div
                                data-plasmic-name={"frame6"}
                                data-plasmic-override={overrides.frame6}
                                className={classNames(
                                  projectcss.all,
                                  sty.frame6
                                )}
                              >
                                <div
                                  data-plasmic-name={"frame7"}
                                  data-plasmic-override={overrides.frame7}
                                  className={classNames(
                                    projectcss.all,
                                    sty.frame7
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"frame8"}
                                    data-plasmic-override={overrides.frame8}
                                    className={classNames(
                                      projectcss.all,
                                      sty.frame8
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"search"}
                                      data-plasmic-override={overrides.search}
                                      className={classNames(
                                        projectcss.all,
                                        sty.search
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__wlpFz
                                        )}
                                      >
                                        {"Search"}
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"autoLayoutHorizontal5"}
                                  data-plasmic-override={
                                    overrides.autoLayoutHorizontal5
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.autoLayoutHorizontal5
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"frame9"}
                                    data-plasmic-override={overrides.frame9}
                                    className={classNames(
                                      projectcss.all,
                                      sty.frame9
                                    )}
                                  >
                                    <FrameIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___7EsmQ
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              </div>
                            </div>
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"autoLayoutHorizontal6"}
                              data-plasmic-override={
                                overrides.autoLayoutHorizontal6
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.autoLayoutHorizontal6
                              )}
                            >
                              <div
                                data-plasmic-name={"autoLayoutHorizontal3"}
                                data-plasmic-override={
                                  overrides.autoLayoutHorizontal3
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.autoLayoutHorizontal3
                                )}
                              >
                                <div
                                  data-plasmic-name={"frame10"}
                                  data-plasmic-override={overrides.frame10}
                                  className={classNames(
                                    projectcss.all,
                                    sty.frame10
                                  )}
                                >
                                  <Frame2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__w3XEh
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                              <div
                                data-plasmic-name={"autoLayoutHorizontal4"}
                                data-plasmic-override={
                                  overrides.autoLayoutHorizontal4
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.autoLayoutHorizontal4
                                )}
                              >
                                <div
                                  data-plasmic-name={"frame11"}
                                  data-plasmic-override={overrides.frame11}
                                  className={classNames(
                                    projectcss.all,
                                    sty.frame11
                                  )}
                                >
                                  <Frame3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__jbTo8
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            </p.Stack>
                            <div
                              data-plasmic-name={"frame12"}
                              data-plasmic-override={overrides.frame12}
                              className={classNames(
                                projectcss.all,
                                sty.frame12
                              )}
                            >
                              <Frame4Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__viezE
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"frame13"}
                          data-plasmic-override={overrides.frame13}
                          className={classNames(projectcss.all, sty.frame13)}
                        >
                          <div
                            data-plasmic-name={"frame14"}
                            data-plasmic-override={overrides.frame14}
                            className={classNames(projectcss.all, sty.frame14)}
                          >
                            <Frame5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yUov3
                              )}
                              role={"img"}
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"header"}
                      data-plasmic-override={overrides.header}
                      className={classNames(projectcss.all, sty.header)}
                    >
                      <div
                        data-plasmic-name={"container"}
                        data-plasmic-override={overrides.container}
                        className={classNames(projectcss.all, sty.container)}
                      />

                      <div
                        data-plasmic-name={"group5"}
                        data-plasmic-override={overrides.group5}
                        className={classNames(projectcss.all, sty.group5)}
                      >
                        <div
                          data-plasmic-name={"group6"}
                          data-plasmic-override={overrides.group6}
                          className={classNames(projectcss.all, sty.group6)}
                        />

                        <div
                          data-plasmic-name={"titleHeader"}
                          data-plasmic-override={overrides.titleHeader}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.titleHeader
                          )}
                        >
                          {"UPDATE ADDRESS"}
                        </div>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__nOSkn
                          )}
                          link={`/account-page`}
                        >
                          {"BACK"}
                        </Button>
                      </div>
                    </div>
                    <FormWrapper
                      data-plasmic-name={"form"}
                      data-plasmic-override={overrides.form}
                      className={classNames("__wab_instance", sty.form)}
                      extendedOnValuesChange={p.generateStateOnChangeProp(
                        $state,
                        ["form", "value"]
                      )}
                      formItems={[
                        { label: "Name", name: "name", inputType: "Text" },
                        {
                          label: "Message",
                          name: "message",
                          inputType: "Text Area"
                        }
                      ]}
                      labelCol={{ span: 8, horizontalOnly: true }}
                      layout={"vertical"}
                      mode={undefined}
                      submitSlot={
                        <AntdButton
                          className={classNames(
                            "__wab_instance",
                            sty.button___3900X
                          )}
                          submitsForm={true}
                          type={"primary"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pJZdz
                            )}
                          >
                            {"Submit"}
                          </div>
                        </AntdButton>
                      }
                      wrapperCol={{ span: 16, horizontalOnly: true }}
                    >
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField__uPsKv
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__doPhi
                            )}
                          >
                            {"First Name"}
                          </div>
                        }
                        name={"name"}
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames("__wab_instance", sty.input),
                            onChange:
                              p.generateStateOnChangePropForCodeComponents(
                                $state,
                                "value",
                                ["input", "value"],
                                AntdInput_Helpers
                              ),
                            value: p.generateStateValueProp($state, [
                              "input",
                              "value"
                            ])
                          };
                          p.initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "value",
                                plasmicStateName: "input.value"
                              }
                            ],

                            [],
                            AntdInput_Helpers ?? {},
                            child$Props
                          );
                          return (
                            <AntdInput
                              data-plasmic-name={"input"}
                              data-plasmic-override={overrides.input}
                              {...child$Props}
                            />
                          );
                        })()}
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField___6FH9
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jO46O
                            )}
                          >
                            {"Last Name"}
                          </div>
                        }
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames("__wab_instance", sty.input3),
                            onChange:
                              p.generateStateOnChangePropForCodeComponents(
                                $state,
                                "value",
                                ["input3", "value"],
                                AntdInput_Helpers
                              ),
                            value: p.generateStateValueProp($state, [
                              "input3",
                              "value"
                            ])
                          };
                          p.initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "value",
                                plasmicStateName: "input3.value"
                              }
                            ],

                            [],
                            AntdInput_Helpers ?? {},
                            child$Props
                          );
                          return (
                            <AntdInput
                              data-plasmic-name={"input3"}
                              data-plasmic-override={overrides.input3}
                              {...child$Props}
                            />
                          );
                        })()}
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField__xDToM
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__av6Wj
                            )}
                          >
                            {"Address1"}
                          </div>
                        }
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames("__wab_instance", sty.input4),
                            onChange:
                              p.generateStateOnChangePropForCodeComponents(
                                $state,
                                "value",
                                ["input4", "value"],
                                AntdInput_Helpers
                              ),
                            value: p.generateStateValueProp($state, [
                              "input4",
                              "value"
                            ])
                          };
                          p.initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "value",
                                plasmicStateName: "input4.value"
                              }
                            ],

                            [],
                            AntdInput_Helpers ?? {},
                            child$Props
                          );
                          return (
                            <AntdInput
                              data-plasmic-name={"input4"}
                              data-plasmic-override={overrides.input4}
                              {...child$Props}
                            />
                          );
                        })()}
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField___1Gwh3
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2IvEs
                            )}
                          >
                            {"Address2"}
                          </div>
                        }
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames("__wab_instance", sty.input5),
                            onChange:
                              p.generateStateOnChangePropForCodeComponents(
                                $state,
                                "value",
                                ["input5", "value"],
                                AntdInput_Helpers
                              ),
                            value: p.generateStateValueProp($state, [
                              "input5",
                              "value"
                            ])
                          };
                          p.initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "value",
                                plasmicStateName: "input5.value"
                              }
                            ],

                            [],
                            AntdInput_Helpers ?? {},
                            child$Props
                          );
                          return (
                            <AntdInput
                              data-plasmic-name={"input5"}
                              data-plasmic-override={overrides.input5}
                              {...child$Props}
                            />
                          );
                        })()}
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField__zrVsu
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oWtmM
                            )}
                          >
                            {"City"}
                          </div>
                        }
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames("__wab_instance", sty.input6),
                            onChange:
                              p.generateStateOnChangePropForCodeComponents(
                                $state,
                                "value",
                                ["input6", "value"],
                                AntdInput_Helpers
                              ),
                            value: p.generateStateValueProp($state, [
                              "input6",
                              "value"
                            ])
                          };
                          p.initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "value",
                                plasmicStateName: "input6.value"
                              }
                            ],

                            [],
                            AntdInput_Helpers ?? {},
                            child$Props
                          );
                          return (
                            <AntdInput
                              data-plasmic-name={"input6"}
                              data-plasmic-override={overrides.input6}
                              {...child$Props}
                            />
                          );
                        })()}
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField__lzsmt
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hhhXf
                            )}
                          >
                            {"Country"}
                          </div>
                        }
                      >
                        <Select
                          data-plasmic-name={"select"}
                          data-plasmic-override={overrides.select}
                          className={classNames("__wab_instance", sty.select)}
                          onChange={(...eventArgs) => {
                            p.generateStateOnChangeProp($state, [
                              "select",
                              "value"
                            ])(eventArgs[0]);
                          }}
                          options={(() => {
                            const __composite = [
                              { value: null, label: null },
                              { value: null, label: null }
                            ];

                            __composite["0"]["value"] = "INDIA";
                            __composite["0"]["label"] = "INDIA";
                            __composite["1"]["value"] = "USA";
                            __composite["1"]["label"] = "USA";
                            return __composite;
                          })()}
                          value={p.generateStateValueProp($state, [
                            "select",
                            "value"
                          ])}
                        />
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField__hVFf
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yOf0
                            )}
                          >
                            {"Zip"}
                          </div>
                        }
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames("__wab_instance", sty.input8),
                            onChange:
                              p.generateStateOnChangePropForCodeComponents(
                                $state,
                                "value",
                                ["input8", "value"],
                                AntdInput_Helpers
                              ),
                            value: p.generateStateValueProp($state, [
                              "input8",
                              "value"
                            ])
                          };
                          p.initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "value",
                                plasmicStateName: "input8.value"
                              }
                            ],

                            [],
                            AntdInput_Helpers ?? {},
                            child$Props
                          );
                          return (
                            <AntdInput
                              data-plasmic-name={"input8"}
                              data-plasmic-override={overrides.input8}
                              {...child$Props}
                            />
                          );
                        })()}
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField__dpl3B
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vFqFf
                            )}
                          >
                            {"Province"}
                          </div>
                        }
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames("__wab_instance", sty.input2),
                            onChange:
                              p.generateStateOnChangePropForCodeComponents(
                                $state,
                                "value",
                                ["input2", "value"],
                                AntdInput_Helpers
                              ),
                            value: p.generateStateValueProp($state, [
                              "input2",
                              "value"
                            ])
                          };
                          p.initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "value",
                                plasmicStateName: "input2.value"
                              }
                            ],

                            [],
                            AntdInput_Helpers ?? {},
                            child$Props
                          );
                          return (
                            <AntdInput
                              data-plasmic-name={"input2"}
                              data-plasmic-override={overrides.input2}
                              {...child$Props}
                            />
                          );
                        })()}
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField__hBAq5
                        )}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qCsxK
                            )}
                          >
                            {"Phone"}
                          </div>
                        }
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames("__wab_instance", sty.input9),
                            onChange:
                              p.generateStateOnChangePropForCodeComponents(
                                $state,
                                "value",
                                ["input9", "value"],
                                AntdInput_Helpers
                              ),
                            value: p.generateStateValueProp($state, [
                              "input9",
                              "value"
                            ])
                          };
                          p.initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "value",
                                plasmicStateName: "input9.value"
                              }
                            ],

                            [],
                            AntdInput_Helpers ?? {},
                            child$Props
                          );
                          return (
                            <AntdInput
                              data-plasmic-name={"input9"}
                              data-plasmic-override={overrides.input9}
                              {...child$Props}
                            />
                          );
                        })()}
                      </FormItemWrapper>
                      <AntdButton
                        className={classNames(
                          "__wab_instance",
                          sty.button__b0MVd
                        )}
                        submitsForm={true}
                        type={"primary"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__l9Nn9
                          )}
                        >
                          {"UPDATE "}
                        </div>
                      </AntdButton>
                    </FormWrapper>
                    <div
                      data-plasmic-name={"frame20"}
                      data-plasmic-override={overrides.frame20}
                      className={classNames(projectcss.all, sty.frame20)}
                    >
                      <div
                        data-plasmic-name={"frame2"}
                        data-plasmic-override={overrides.frame2}
                        className={classNames(projectcss.all, sty.frame2)}
                      >
                        <div
                          data-plasmic-name={"frame3"}
                          data-plasmic-override={overrides.frame3}
                          className={classNames(projectcss.all, sty.frame3)}
                        >
                          <div
                            data-plasmic-name={"frame4"}
                            data-plasmic-override={overrides.frame4}
                            className={classNames(projectcss.all, sty.frame4)}
                          >
                            <div
                              data-plasmic-name={"frame5"}
                              data-plasmic-override={overrides.frame5}
                              className={classNames(projectcss.all, sty.frame5)}
                            >
                              <div
                                data-plasmic-name={"frame21"}
                                data-plasmic-override={overrides.frame21}
                                className={classNames(
                                  projectcss.all,
                                  sty.frame21
                                )}
                              >
                                <div
                                  data-plasmic-name={"findAStore"}
                                  data-plasmic-override={overrides.findAStore}
                                  className={classNames(
                                    projectcss.all,
                                    sty.findAStore
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__k4Uwi
                                    )}
                                  >
                                    {"Find A Store"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"becomeAMember"}
                                  data-plasmic-override={
                                    overrides.becomeAMember
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.becomeAMember
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__j6Bm
                                    )}
                                  >
                                    {"Become A Member"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"signUpForEmail"}
                                  data-plasmic-override={
                                    overrides.signUpForEmail
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signUpForEmail
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___0Bw4R
                                    )}
                                  >
                                    {"Sign Up for Email"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"sendUsFeedback"}
                                  data-plasmic-override={
                                    overrides.sendUsFeedback
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.sendUsFeedback
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__dbku1
                                    )}
                                  >
                                    {"Send Us Feedback"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"studentDiscounts"}
                                  data-plasmic-override={
                                    overrides.studentDiscounts
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.studentDiscounts
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__t93DI
                                    )}
                                  >
                                    {"Student Discounts"}
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"frame22"}
                              data-plasmic-override={overrides.frame22}
                              className={classNames(
                                projectcss.all,
                                sty.frame22
                              )}
                            >
                              <div
                                data-plasmic-name={"frame23"}
                                data-plasmic-override={overrides.frame23}
                                className={classNames(
                                  projectcss.all,
                                  sty.frame23
                                )}
                              >
                                <div
                                  data-plasmic-name={"getHelp"}
                                  data-plasmic-override={overrides.getHelp}
                                  className={classNames(
                                    projectcss.all,
                                    sty.getHelp
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__bpFeY
                                    )}
                                  >
                                    {"Get Help"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"orderStatus"}
                                  data-plasmic-override={overrides.orderStatus}
                                  className={classNames(
                                    projectcss.all,
                                    sty.orderStatus
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__m15ML
                                    )}
                                  >
                                    {"Order Status"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"delivery"}
                                  data-plasmic-override={overrides.delivery}
                                  className={classNames(
                                    projectcss.all,
                                    sty.delivery
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___0NUhF
                                    )}
                                  >
                                    {"Delivery"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"returns"}
                                  data-plasmic-override={overrides.returns}
                                  className={classNames(
                                    projectcss.all,
                                    sty.returns
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__mYzEz
                                    )}
                                  >
                                    {"Returns"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"paymentOptions"}
                                  data-plasmic-override={
                                    overrides.paymentOptions
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.paymentOptions
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___22Jba
                                    )}
                                  >
                                    {"Payment Options"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={
                                    "contactUsOnNikecomInquiries"
                                  }
                                  data-plasmic-override={
                                    overrides.contactUsOnNikecomInquiries
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.contactUsOnNikecomInquiries
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__cqILb
                                    )}
                                  >
                                    {"Contact Us On Nike.com Inquiries"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={
                                    "contactUsOnAllOtherInquiries"
                                  }
                                  data-plasmic-override={
                                    overrides.contactUsOnAllOtherInquiries
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.contactUsOnAllOtherInquiries
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__jef98
                                    )}
                                  >
                                    {"Contact Us On All Other Inquiries"}
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"frame24"}
                              data-plasmic-override={overrides.frame24}
                              className={classNames(
                                projectcss.all,
                                sty.frame24
                              )}
                            >
                              <div
                                data-plasmic-name={"frame25"}
                                data-plasmic-override={overrides.frame25}
                                className={classNames(
                                  projectcss.all,
                                  sty.frame25
                                )}
                              >
                                <div
                                  data-plasmic-name={"aboutNike"}
                                  data-plasmic-override={overrides.aboutNike}
                                  className={classNames(
                                    projectcss.all,
                                    sty.aboutNike
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___22WVo
                                    )}
                                  >
                                    {"About Nike"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"news"}
                                  data-plasmic-override={overrides.news}
                                  className={classNames(
                                    projectcss.all,
                                    sty.news
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__nk6Ya
                                    )}
                                  >
                                    {"News"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"careers"}
                                  data-plasmic-override={overrides.careers}
                                  className={classNames(
                                    projectcss.all,
                                    sty.careers
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__nuQvA
                                    )}
                                  >
                                    {"Careers"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"investors"}
                                  data-plasmic-override={overrides.investors}
                                  className={classNames(
                                    projectcss.all,
                                    sty.investors
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___0Ca1Q
                                    )}
                                  >
                                    {"Investors"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"sustainability"}
                                  data-plasmic-override={
                                    overrides.sustainability
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.sustainability
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__dcD9X
                                    )}
                                  >
                                    {"Sustainability"}
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            data-plasmic-name={"frame26"}
                            data-plasmic-override={overrides.frame26}
                            className={classNames(projectcss.all, sty.frame26)}
                          >
                            <div
                              data-plasmic-name={"frame27"}
                              data-plasmic-override={overrides.frame27}
                              className={classNames(
                                projectcss.all,
                                sty.frame27
                              )}
                            >
                              <Frame6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__r1FHe
                                )}
                                role={"img"}
                              />
                            </div>
                            <div
                              data-plasmic-name={"frame28"}
                              data-plasmic-override={overrides.frame28}
                              className={classNames(
                                projectcss.all,
                                sty.frame28
                              )}
                            >
                              <Frame7Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___4AZvS
                                )}
                                role={"img"}
                              />
                            </div>
                            <div
                              data-plasmic-name={"frame29"}
                              data-plasmic-override={overrides.frame29}
                              className={classNames(
                                projectcss.all,
                                sty.frame29
                              )}
                            >
                              <Frame8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___5MOrB
                                )}
                                role={"img"}
                              />
                            </div>
                            <div
                              data-plasmic-name={"frame30"}
                              data-plasmic-override={overrides.frame30}
                              className={classNames(
                                projectcss.all,
                                sty.frame30
                              )}
                            >
                              <Frame9Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__dnwL2
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"frame31"}
                          data-plasmic-override={overrides.frame31}
                          className={classNames(projectcss.all, sty.frame31)}
                        >
                          <div
                            data-plasmic-name={"frame32"}
                            data-plasmic-override={overrides.frame32}
                            className={classNames(projectcss.all, sty.frame32)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"autoLayoutHorizontal"}
                              data-plasmic-override={
                                overrides.autoLayoutHorizontal
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.autoLayoutHorizontal
                              )}
                            >
                              <div
                                data-plasmic-name={"frame33"}
                                data-plasmic-override={overrides.frame33}
                                className={classNames(
                                  projectcss.all,
                                  sty.frame33
                                )}
                              >
                                <Frame10Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___1EHrh
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___1XWYh
                                )}
                              >
                                {"India"}
                              </div>
                            </p.Stack>
                            <div
                              data-plasmic-name={
                                "_2023NikeIncAllRightsReserved"
                              }
                              data-plasmic-override={
                                overrides._2023NikeIncAllRightsReserved
                              }
                              className={classNames(
                                projectcss.all,
                                sty._2023NikeIncAllRightsReserved
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__x8IU
                                )}
                              >
                                {"© 2023 Nike, Inc. All Rights Reserved"}
                              </div>
                            </div>
                          </div>
                          <div
                            data-plasmic-name={"frame34"}
                            data-plasmic-override={overrides.frame34}
                            className={classNames(projectcss.all, sty.frame34)}
                          >
                            <div
                              data-plasmic-name={"guides"}
                              data-plasmic-override={overrides.guides}
                              className={classNames(projectcss.all, sty.guides)}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___6Nq
                                )}
                              >
                                {"Guides"}
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"termsOfSale"}
                              data-plasmic-override={overrides.termsOfSale}
                              className={classNames(
                                projectcss.all,
                                sty.termsOfSale
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uxDkl
                                )}
                              >
                                {"Terms of Sale"}
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"termsOfUse"}
                              data-plasmic-override={overrides.termsOfUse}
                              className={classNames(
                                projectcss.all,
                                sty.termsOfUse
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xezzz
                                )}
                              >
                                {"Terms of Use"}
                              </div>
                            </div>
                            <div
                              data-plasmic-name={"nikePrivacyPolicy"}
                              data-plasmic-override={
                                overrides.nikePrivacyPolicy
                              }
                              className={classNames(
                                projectcss.all,
                                sty.nikePrivacyPolicy
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lk8Sh
                                )}
                              >
                                {"Nike Privacy Policy"}
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                ) : null
              }
            </ph.DataCtxReader>
          </GraphqlFetcher>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "graphQlFetcher",
    "freeBox",
    "frame",
    "frame15",
    "frame16",
    "frame17",
    "newFeatured",
    "men",
    "women",
    "kids",
    "sale",
    "snkrs",
    "frame18",
    "frame19",
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9",
    "autoLayoutHorizontal6",
    "autoLayoutHorizontal3",
    "frame10",
    "autoLayoutHorizontal4",
    "frame11",
    "frame12",
    "frame13",
    "frame14",
    "header",
    "container",
    "group5",
    "group6",
    "titleHeader",
    "form",
    "input",
    "input3",
    "input4",
    "input5",
    "input6",
    "select",
    "input8",
    "input2",
    "input9",
    "frame20",
    "frame2",
    "frame3",
    "frame4",
    "frame5",
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts",
    "frame22",
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries",
    "frame24",
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32",
    "autoLayoutHorizontal",
    "frame33",
    "_2023NikeIncAllRightsReserved",
    "frame34",
    "guides",
    "termsOfSale",
    "termsOfUse",
    "nikePrivacyPolicy"
  ],

  graphQlFetcher: [
    "graphQlFetcher",
    "freeBox",
    "frame",
    "frame15",
    "frame16",
    "frame17",
    "newFeatured",
    "men",
    "women",
    "kids",
    "sale",
    "snkrs",
    "frame18",
    "frame19",
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9",
    "autoLayoutHorizontal6",
    "autoLayoutHorizontal3",
    "frame10",
    "autoLayoutHorizontal4",
    "frame11",
    "frame12",
    "frame13",
    "frame14",
    "header",
    "container",
    "group5",
    "group6",
    "titleHeader",
    "form",
    "input",
    "input3",
    "input4",
    "input5",
    "input6",
    "select",
    "input8",
    "input2",
    "input9",
    "frame20",
    "frame2",
    "frame3",
    "frame4",
    "frame5",
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts",
    "frame22",
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries",
    "frame24",
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32",
    "autoLayoutHorizontal",
    "frame33",
    "_2023NikeIncAllRightsReserved",
    "frame34",
    "guides",
    "termsOfSale",
    "termsOfUse",
    "nikePrivacyPolicy"
  ],

  freeBox: [
    "freeBox",
    "frame",
    "frame15",
    "frame16",
    "frame17",
    "newFeatured",
    "men",
    "women",
    "kids",
    "sale",
    "snkrs",
    "frame18",
    "frame19",
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9",
    "autoLayoutHorizontal6",
    "autoLayoutHorizontal3",
    "frame10",
    "autoLayoutHorizontal4",
    "frame11",
    "frame12",
    "frame13",
    "frame14",
    "header",
    "container",
    "group5",
    "group6",
    "titleHeader",
    "form",
    "input",
    "input3",
    "input4",
    "input5",
    "input6",
    "select",
    "input8",
    "input2",
    "input9",
    "frame20",
    "frame2",
    "frame3",
    "frame4",
    "frame5",
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts",
    "frame22",
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries",
    "frame24",
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32",
    "autoLayoutHorizontal",
    "frame33",
    "_2023NikeIncAllRightsReserved",
    "frame34",
    "guides",
    "termsOfSale",
    "termsOfUse",
    "nikePrivacyPolicy"
  ],

  frame: [
    "frame",
    "frame15",
    "frame16",
    "frame17",
    "newFeatured",
    "men",
    "women",
    "kids",
    "sale",
    "snkrs",
    "frame18",
    "frame19",
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9",
    "autoLayoutHorizontal6",
    "autoLayoutHorizontal3",
    "frame10",
    "autoLayoutHorizontal4",
    "frame11",
    "frame12",
    "frame13",
    "frame14"
  ],

  frame15: [
    "frame15",
    "frame16",
    "frame17",
    "newFeatured",
    "men",
    "women",
    "kids",
    "sale",
    "snkrs",
    "frame18",
    "frame19",
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9",
    "autoLayoutHorizontal6",
    "autoLayoutHorizontal3",
    "frame10",
    "autoLayoutHorizontal4",
    "frame11",
    "frame12",
    "frame13",
    "frame14"
  ],

  frame16: [
    "frame16",
    "frame17",
    "newFeatured",
    "men",
    "women",
    "kids",
    "sale",
    "snkrs",
    "frame18",
    "frame19",
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9",
    "autoLayoutHorizontal6",
    "autoLayoutHorizontal3",
    "frame10",
    "autoLayoutHorizontal4",
    "frame11",
    "frame12"
  ],

  frame17: ["frame17", "newFeatured", "men", "women", "kids", "sale", "snkrs"],
  newFeatured: ["newFeatured"],
  men: ["men"],
  women: ["women"],
  kids: ["kids"],
  sale: ["sale"],
  snkrs: ["snkrs"],
  frame18: [
    "frame18",
    "frame19",
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9",
    "autoLayoutHorizontal6",
    "autoLayoutHorizontal3",
    "frame10",
    "autoLayoutHorizontal4",
    "frame11",
    "frame12"
  ],

  frame19: [
    "frame19",
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9"
  ],

  frame6: [
    "frame6",
    "frame7",
    "frame8",
    "search",
    "autoLayoutHorizontal5",
    "frame9"
  ],

  frame7: ["frame7", "frame8", "search"],
  frame8: ["frame8", "search"],
  search: ["search"],
  autoLayoutHorizontal5: ["autoLayoutHorizontal5", "frame9"],
  frame9: ["frame9"],
  autoLayoutHorizontal6: [
    "autoLayoutHorizontal6",
    "autoLayoutHorizontal3",
    "frame10",
    "autoLayoutHorizontal4",
    "frame11"
  ],

  autoLayoutHorizontal3: ["autoLayoutHorizontal3", "frame10"],
  frame10: ["frame10"],
  autoLayoutHorizontal4: ["autoLayoutHorizontal4", "frame11"],
  frame11: ["frame11"],
  frame12: ["frame12"],
  frame13: ["frame13", "frame14"],
  frame14: ["frame14"],
  header: ["header", "container", "group5", "group6", "titleHeader"],
  container: ["container"],
  group5: ["group5", "group6", "titleHeader"],
  group6: ["group6"],
  titleHeader: ["titleHeader"],
  form: [
    "form",
    "input",
    "input3",
    "input4",
    "input5",
    "input6",
    "select",
    "input8",
    "input2",
    "input9"
  ],

  input: ["input"],
  input3: ["input3"],
  input4: ["input4"],
  input5: ["input5"],
  input6: ["input6"],
  select: ["select"],
  input8: ["input8"],
  input2: ["input2"],
  input9: ["input9"],
  frame20: [
    "frame20",
    "frame2",
    "frame3",
    "frame4",
    "frame5",
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts",
    "frame22",
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries",
    "frame24",
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32",
    "autoLayoutHorizontal",
    "frame33",
    "_2023NikeIncAllRightsReserved",
    "frame34",
    "guides",
    "termsOfSale",
    "termsOfUse",
    "nikePrivacyPolicy"
  ],

  frame2: [
    "frame2",
    "frame3",
    "frame4",
    "frame5",
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts",
    "frame22",
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries",
    "frame24",
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32",
    "autoLayoutHorizontal",
    "frame33",
    "_2023NikeIncAllRightsReserved",
    "frame34",
    "guides",
    "termsOfSale",
    "termsOfUse",
    "nikePrivacyPolicy"
  ],

  frame3: [
    "frame3",
    "frame4",
    "frame5",
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts",
    "frame22",
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries",
    "frame24",
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "frame30"
  ],

  frame4: [
    "frame4",
    "frame5",
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts",
    "frame22",
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries",
    "frame24",
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability"
  ],

  frame5: [
    "frame5",
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts"
  ],

  frame21: [
    "frame21",
    "findAStore",
    "becomeAMember",
    "signUpForEmail",
    "sendUsFeedback",
    "studentDiscounts"
  ],

  findAStore: ["findAStore"],
  becomeAMember: ["becomeAMember"],
  signUpForEmail: ["signUpForEmail"],
  sendUsFeedback: ["sendUsFeedback"],
  studentDiscounts: ["studentDiscounts"],
  frame22: [
    "frame22",
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries"
  ],

  frame23: [
    "frame23",
    "getHelp",
    "orderStatus",
    "delivery",
    "returns",
    "paymentOptions",
    "contactUsOnNikecomInquiries",
    "contactUsOnAllOtherInquiries"
  ],

  getHelp: ["getHelp"],
  orderStatus: ["orderStatus"],
  delivery: ["delivery"],
  returns: ["returns"],
  paymentOptions: ["paymentOptions"],
  contactUsOnNikecomInquiries: ["contactUsOnNikecomInquiries"],
  contactUsOnAllOtherInquiries: ["contactUsOnAllOtherInquiries"],
  frame24: [
    "frame24",
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability"
  ],

  frame25: [
    "frame25",
    "aboutNike",
    "news",
    "careers",
    "investors",
    "sustainability"
  ],

  aboutNike: ["aboutNike"],
  news: ["news"],
  careers: ["careers"],
  investors: ["investors"],
  sustainability: ["sustainability"],
  frame26: ["frame26", "frame27", "frame28", "frame29", "frame30"],
  frame27: ["frame27"],
  frame28: ["frame28"],
  frame29: ["frame29"],
  frame30: ["frame30"],
  frame31: [
    "frame31",
    "frame32",
    "autoLayoutHorizontal",
    "frame33",
    "_2023NikeIncAllRightsReserved",
    "frame34",
    "guides",
    "termsOfSale",
    "termsOfUse",
    "nikePrivacyPolicy"
  ],

  frame32: [
    "frame32",
    "autoLayoutHorizontal",
    "frame33",
    "_2023NikeIncAllRightsReserved"
  ],

  autoLayoutHorizontal: ["autoLayoutHorizontal", "frame33"],
  frame33: ["frame33"],
  _2023NikeIncAllRightsReserved: ["_2023NikeIncAllRightsReserved"],
  frame34: [
    "frame34",
    "guides",
    "termsOfSale",
    "termsOfUse",
    "nikePrivacyPolicy"
  ],

  guides: ["guides"],
  termsOfSale: ["termsOfSale"],
  termsOfUse: ["termsOfUse"],
  nikePrivacyPolicy: ["nikePrivacyPolicy"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicUpdateAddress__ArgProps,
          internalVariantPropNames: PlasmicUpdateAddress__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicUpdateAddress__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicUpdateAddress";
  } else {
    func.displayName = `PlasmicUpdateAddress.${nodeName}`;
  }
  return func;
}

export const PlasmicUpdateAddress = Object.assign(
  // Top-level PlasmicUpdateAddress renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    graphQlFetcher: makeNodeComponent("graphQlFetcher"),
    freeBox: makeNodeComponent("freeBox"),
    frame: makeNodeComponent("frame"),
    frame15: makeNodeComponent("frame15"),
    frame16: makeNodeComponent("frame16"),
    frame17: makeNodeComponent("frame17"),
    newFeatured: makeNodeComponent("newFeatured"),
    men: makeNodeComponent("men"),
    women: makeNodeComponent("women"),
    kids: makeNodeComponent("kids"),
    sale: makeNodeComponent("sale"),
    snkrs: makeNodeComponent("snkrs"),
    frame18: makeNodeComponent("frame18"),
    frame19: makeNodeComponent("frame19"),
    frame6: makeNodeComponent("frame6"),
    frame7: makeNodeComponent("frame7"),
    frame8: makeNodeComponent("frame8"),
    search: makeNodeComponent("search"),
    autoLayoutHorizontal5: makeNodeComponent("autoLayoutHorizontal5"),
    frame9: makeNodeComponent("frame9"),
    autoLayoutHorizontal6: makeNodeComponent("autoLayoutHorizontal6"),
    autoLayoutHorizontal3: makeNodeComponent("autoLayoutHorizontal3"),
    frame10: makeNodeComponent("frame10"),
    autoLayoutHorizontal4: makeNodeComponent("autoLayoutHorizontal4"),
    frame11: makeNodeComponent("frame11"),
    frame12: makeNodeComponent("frame12"),
    frame13: makeNodeComponent("frame13"),
    frame14: makeNodeComponent("frame14"),
    header: makeNodeComponent("header"),
    container: makeNodeComponent("container"),
    group5: makeNodeComponent("group5"),
    group6: makeNodeComponent("group6"),
    titleHeader: makeNodeComponent("titleHeader"),
    form: makeNodeComponent("form"),
    input: makeNodeComponent("input"),
    input3: makeNodeComponent("input3"),
    input4: makeNodeComponent("input4"),
    input5: makeNodeComponent("input5"),
    input6: makeNodeComponent("input6"),
    select: makeNodeComponent("select"),
    input8: makeNodeComponent("input8"),
    input2: makeNodeComponent("input2"),
    input9: makeNodeComponent("input9"),
    frame20: makeNodeComponent("frame20"),
    frame2: makeNodeComponent("frame2"),
    frame3: makeNodeComponent("frame3"),
    frame4: makeNodeComponent("frame4"),
    frame5: makeNodeComponent("frame5"),
    frame21: makeNodeComponent("frame21"),
    findAStore: makeNodeComponent("findAStore"),
    becomeAMember: makeNodeComponent("becomeAMember"),
    signUpForEmail: makeNodeComponent("signUpForEmail"),
    sendUsFeedback: makeNodeComponent("sendUsFeedback"),
    studentDiscounts: makeNodeComponent("studentDiscounts"),
    frame22: makeNodeComponent("frame22"),
    frame23: makeNodeComponent("frame23"),
    getHelp: makeNodeComponent("getHelp"),
    orderStatus: makeNodeComponent("orderStatus"),
    delivery: makeNodeComponent("delivery"),
    returns: makeNodeComponent("returns"),
    paymentOptions: makeNodeComponent("paymentOptions"),
    contactUsOnNikecomInquiries: makeNodeComponent(
      "contactUsOnNikecomInquiries"
    ),
    contactUsOnAllOtherInquiries: makeNodeComponent(
      "contactUsOnAllOtherInquiries"
    ),
    frame24: makeNodeComponent("frame24"),
    frame25: makeNodeComponent("frame25"),
    aboutNike: makeNodeComponent("aboutNike"),
    news: makeNodeComponent("news"),
    careers: makeNodeComponent("careers"),
    investors: makeNodeComponent("investors"),
    sustainability: makeNodeComponent("sustainability"),
    frame26: makeNodeComponent("frame26"),
    frame27: makeNodeComponent("frame27"),
    frame28: makeNodeComponent("frame28"),
    frame29: makeNodeComponent("frame29"),
    frame30: makeNodeComponent("frame30"),
    frame31: makeNodeComponent("frame31"),
    frame32: makeNodeComponent("frame32"),
    autoLayoutHorizontal: makeNodeComponent("autoLayoutHorizontal"),
    frame33: makeNodeComponent("frame33"),
    _2023NikeIncAllRightsReserved: makeNodeComponent(
      "_2023NikeIncAllRightsReserved"
    ),
    frame34: makeNodeComponent("frame34"),
    guides: makeNodeComponent("guides"),
    termsOfSale: makeNodeComponent("termsOfSale"),
    termsOfUse: makeNodeComponent("termsOfUse"),
    nikePrivacyPolicy: makeNodeComponent("nikePrivacyPolicy"),
    // Metadata about props expected for PlasmicUpdateAddress
    internalVariantProps: PlasmicUpdateAddress__VariantProps,
    internalArgProps: PlasmicUpdateAddress__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicUpdateAddress;
/* prettier-ignore-end */
